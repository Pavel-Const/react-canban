{"version":3,"sources":["Components/CardPopup/CardPopup.js","Components/Card/Card.js","Components/CradList/CardList.js","Components/Column/Column.js","Components/StartWindow/StartWindow.js","Components/Board/Board.js","Layout/Layout.js","reportWebVitals.js","index.js"],"names":["Start","console","log","this","props","authorName","className","title","type","value","nameCard","onChange","changeNameCard","descriptionVision","description","changeDescription","onClick","addDescription","closePopup","deleteCard","addComent","React","Component","Card","openPopup","qunt","popupIsOpen","indexColumn","index","indexCard","CardList","card","length","map","item","quant","event","target","Column","inputRef","changeTitle","ref","addNewCard","clearInput","state","isOpen","handleFormSubmit","name","localStorage","setItem","setState","Fragment","getItem","placeholder","Board","addNewComent","text","board","concat","comment","push","textComent","quantComent","cardIndex","newName","JSON","parse","id","bind","authName","splice","stringify","Layout","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b71ee400.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './CardPopup.css'\r\n\r\nexport default class Start extends React.Component {\r\n    render() {\r\n        console.log(this.props.authorName)\r\n        return (\r\n            <div className={'CardPopup'}>\r\n                <div className={'CardPopup-body'}>\r\n                    <h2>{this.props.title}</h2>\r\n                    <input\r\n                        className={'CardPopup-input'}\r\n                        type=\"text\"\r\n                        value={this.props.nameCard}\r\n                        onChange={this.props.changeNameCard}\r\n                    />\r\n\r\n                    {this.props.descriptionVision ?\r\n                        <textarea\r\n                            className={'CardPopup-description'}\r\n                            value={this.props.description}\r\n                            type=\"text\"\r\n                            onChange={this.props.changeDescription}\r\n                        />\r\n                        : <button onClick={this.props.addDescription}>Add description</button>}\r\n                    <button className={'CardPopup-close'} onClick={this.props.closePopup}>Close</button>\r\n                    <button className={'CardPopup-delete'} onClick={this.props.deleteCard}>Delete</button>\r\n                    <button onClick={this.props.addComent}>Add comment</button>\r\n                    <h3 className={'CardPopup-authorName'}>by {this.props.authorName}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport './Card.css'\r\nimport CardPopup from \"../CardPopup/CardPopup\";\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div>\r\n            <div className={'Card'} onClick={props.openPopup}>\r\n                <h2> {props.nameCard}</h2>\r\n                <p>Коментариев {props.qunt}</p>\r\n                {/*<button onClick={props.deleteCard}>Delete</button>*/}\r\n\r\n            </div>\r\n            {props.popupIsOpen && (\r\n                <CardPopup\r\n                    popupIsOpen={props.popupIsOpen}\r\n                    openPopup={props.openPopup}\r\n                    closePopup={props.closePopup}\r\n                    deleteCard={props.deleteCard}\r\n                    indexColumn={props.index}\r\n                    indexCard={props.indexCard}\r\n                    nameCard={props.nameCard}\r\n                    changeNameCard={props.changeNameCard}\r\n                    changeDescription={props.changeDescription}\r\n                    authorName={props.authorName}\r\n                    title={props.title}\r\n                    description={props.description}\r\n                    descriptionVision={props.descriptionVision}\r\n                    addDescription={props.addDescription}\r\n                />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Card","import './CardList.css'\r\nimport Card from \"../Card/Card\";\r\n\r\nconst CardList = props => {\r\n    return(\r\n        <div>\r\n            {props.card.length !== 0\r\n                ? props.card.map((item, index) => {\r\n                    return (<Card\r\n                        nameCard={item.nameCard}\r\n                        qunt={item.quant}\r\n                        authorName={item.authorName}\r\n                        key={index}\r\n                        index={props.index}\r\n                        indexCard={index}\r\n                        deleteCard={() =>props.deleteCard(props.index, index)}\r\n                        openPopup={() =>props.openPopup(props.index, index)}\r\n                        closePopup={() =>props.closePopup(props.index, index)}\r\n                        addDescription={() =>props.addDescription(props.index, index)}\r\n                        popupIsOpen={item.popupIsOpen}\r\n                        changeNameCard={(event) => props.changeNameCard(event.target.value, props.index, index)}\r\n                        changeDescription={(event) => props.changeDescription(event.target.value, props.index, index)}\r\n                        title={props.title}\r\n                        description={item.description}\r\n                        descriptionVision={item.descriptionVision}\r\n                    />)\r\n                })\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React, {Component} from \"react\";\r\nimport './Column.css'\r\nimport CardList from \"../CradList/CardList\";\r\n\r\nclass Column extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = null;\r\n    }\r\n    clearInput(){\r\n        this.inputRef.value=''\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={'Column'}>\r\n                <input\r\n                    className={'input-title'}\r\n                    type=\"text\"\r\n                    value={this.props.title}\r\n                    onChange={this.props.changeTitle}\r\n                />\r\n                <input type={'text'} ref={ref => this.inputRef = ref}/>\r\n                <button onClick={() => {\r\n                    this.props.addNewCard(this.inputRef.value, this.props.index)\r\n                    this.clearInput()\r\n                }} >Add New Card\r\n                </button>\r\n\r\n                <CardList\r\n                    openPopup={this.props.openPopup}\r\n                    closePopup={this.props.closePopup}\r\n                    card={this.props.card}\r\n                    deleteCard={this.props.deleteCard}\r\n                    index={this.props.index}\r\n                    popupIsOpen={this.props.popupIsOpen}\r\n                    changeNameCard={this.props.changeNameCard}\r\n                    changeDescription={this.props.changeDescription}\r\n                    title={this.props.title}\r\n                    addDescription={this.props.addDescription}\r\n                />\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default Column","import React from \"react\";\r\nimport './StartWindow.css'\r\n\r\nexport default class Start extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = null;\r\n    }\r\n    state = {\r\n        // name: '',\r\n        isOpen: true\r\n    }\r\n\r\n\r\n    handleFormSubmit = (name) => {\r\n        localStorage.setItem('name', name);\r\n        this.setState({isOpen: false})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {localStorage.getItem('name') === null ?\r\n                    this.state.isOpen && (\r\n                            <div className={'modal'}>\r\n                                <div className={'modal-body'}>\r\n                                    <input type=\"text\" placeholder={'Введите ваше имя'}\r\n                                           ref={ref => this.inputRef = ref}/>\r\n                                    <button onClick={() => this.handleFormSubmit(this.inputRef.value)}>Ok</button>\r\n                                </div>\r\n                            </div>)\r\n                    : null\r\n                    }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport './Board.css'\r\nimport Column from \"../Column/Column\";\r\nimport Start from \"../StartWindow/StartWindow\";\r\n\r\n\r\nclass Board extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        {\r\n            if (JSON.parse(localStorage.getItem('board')) === null) {\r\n                this.state = {\r\n                    board: [\r\n                        {\r\n                            title: 'TODO',\r\n                            id: 1,\r\n                            card: [\r\n                                {\r\n                                    popupIsOpen: false,\r\n                                    nameCard: 'Сделать описание карточки',\r\n                                    quant: 6,\r\n                                    description: 'Описание карточки',\r\n                                    descriptionVision: true,\r\n                                    authorName: 'chuk',\r\n                                    comment: [\r\n                                        {\r\n                                            textComent: '',\r\n                                            quantComent: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'in Progress',\r\n                            id: 2,\r\n                            card: []\r\n                        },\r\n                        {\r\n                            title: 'Testing',\r\n                            id: 3,\r\n                            card: []\r\n                        },\r\n                        {\r\n                            title: 'Done',\r\n                            id: 4,\r\n                            card: []\r\n                        }\r\n                    ]\r\n                }\r\n            } else {\r\n                this.state = JSON.parse(localStorage.getItem('board'));\r\n            }\r\n        }\r\n\r\n        this.addNewCard = this.addNewCard.bind(this);\r\n        this.deleteCard = this.deleteCard.bind(this)\r\n    }\r\n\r\n\r\n    changeTitle(title, index) {\r\n        const board = this.state.board.concat()\r\n        board[index].title = title\r\n        this.setState({board})\r\n    }\r\n\r\n    addNewCard(name, index) {\r\n        const authName = localStorage.getItem('name')\r\n        if (name.length !== 0) {\r\n            const board = this.state.board.concat()\r\n\r\n            board[index].card.push({\r\n                nameCard: name,\r\n                quant: 0,\r\n                popupIsOpen: false,\r\n                description: '',\r\n                descriptionVision: false,\r\n                authorName: authName,\r\n                comment: [\r\n                    {\r\n                        textComent: '',\r\n                        quantComent: 0\r\n                    }\r\n                ]\r\n            })\r\n            this.setState({board})\r\n\r\n        } else return null\r\n    }\r\n\r\n    addNewComent = (text, indexColumn, indexCard) => {\r\n        const board = this.state.board.concat()\r\n        board[indexColumn].card[indexCard].comment.push({\r\n            textComent: text,\r\n            quantComent: board[indexColumn].card[indexCard].comment.length\r\n        })\r\n        this.setState({board})\r\n    }\r\n\r\n    deleteCard(index, cardIndex) {\r\n        const board = this.state.board.concat()\r\n        board[index].card.splice(cardIndex, 1)\r\n        this.setState({board})\r\n    }\r\n\r\n    openPopup = (index, cardIndex) => {\r\n        const board = this.state.board.concat()\r\n        board[index].card[cardIndex].popupIsOpen = true\r\n        this.setState({board})\r\n    }\r\n\r\n    closePopup = (index, cardIndex) => {\r\n        const board = this.state.board.concat()\r\n        board[index].card[cardIndex].popupIsOpen = false\r\n        this.setState({board})\r\n    }\r\n\r\n    changeNameCard = (newName, index, cardIndex) => {\r\n        const board = this.state.board.concat()\r\n        board[index].card[cardIndex].nameCard = newName\r\n        this.setState({board})\r\n    }\r\n    changeDescription = (description, index, cardIndex) => {\r\n        const board = this.state.board.concat()\r\n        board[index].card[cardIndex].description = description\r\n        this.setState({board})\r\n    }\r\n\r\n    addDescription = (index, cardIndex) => {\r\n        const board = this.state.board.concat()\r\n        board[index].card[cardIndex].descriptionVision = true\r\n        this.setState({board})\r\n    }\r\n\r\n    render() {\r\n        localStorage.setItem('board', JSON.stringify(this.state));\r\n        return (\r\n            <div className={'Board'}>\r\n                <Start/>\r\n\r\n                {this.state.board.map((item, index) => {\r\n                    return <Column\r\n                        title={item.title}\r\n                        key={index}\r\n                        card={item.card}\r\n                        index={index}\r\n                        changeTitle={(event) => this.changeTitle(event.target.value, index)}\r\n                        addNewCard={this.addNewCard}\r\n                        openPopup={this.openPopup}\r\n                        closePopup={this.closePopup}\r\n                        deleteCard={this.deleteCard}\r\n                        changeNameCard={this.changeNameCard}\r\n                        changeDescription={this.changeDescription}\r\n                        addDescription={this.addDescription}\r\n                    />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Board","import React, {Component} from \"react\";\r\nimport './Layout.css'\r\n\r\nclass Layout extends Component{\r\n    render() {\r\n        return (\r\n            <div className={'Layout'}>\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from \"./Components/Board/Board\";\nimport Layout from \"./Layout/Layout\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Layout>\n          <Board/>\n      </Layout>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}